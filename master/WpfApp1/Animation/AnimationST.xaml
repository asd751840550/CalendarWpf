<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApp1.Animation"
                    xmlns:convert="clr-namespace:WpfApp1.Converter.Calendar">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <convert:czFontSizeConverter x:Key="fontsizeconverter"/>
            <convert:ListBoxItemConverter x:Key="lstboxitemconverter"/>
            <convert:ListBoxItemColorConverter x:Key="itemcolorconverter"/>
            <convert:TitleConverter x:Key="titleconverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DayListBoxItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Name="gdpnl" Margin="3" Background="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBoxItem}, Converter={StaticResource itemcolorconverter}}">
                        <Border Name="Bd" BorderBrush="Transparent" BorderThickness="3"  >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1.5*"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" TextAlignment="Center" 
                                           FontSize="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource fontsizeconverter}, ConverterParameter=Day}"
                                           Text="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Converter={StaticResource lstboxitemconverter}, ConverterParameter=Date}"/>
                                <TextBlock Grid.Row="1" TextAlignment="Center"  TextTrimming="CharacterEllipsis" 
                                           ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"
                                           FontSize="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource fontsizeconverter}, ConverterParameter=Day}" 
                                           Text="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Converter={StaticResource lstboxitemconverter}, ConverterParameter=Remarks}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <convert:ListBoxItemColorConverter x:Key="itemcolorconverter"/>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding ElementName=gdpnl, Path=Background, Converter={StaticResource itemcolorconverter}, ConverterParameter=Selected}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding ElementName=gdpnl, Path=Background, Converter={StaticResource itemcolorconverter}, ConverterParameter=Over}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--标题按钮-->
    <Style x:Key="TitleButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Content">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource titleconverter}">
                        <Binding Path="CalendarType"/>
                        <Binding Path="ShowingDate"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--标题左右按钮-->
    <Style x:Key="LRButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--<Style TargetType="Grid">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0" ScaleY="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Mode=Self}}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="PlayAnimaiton">
                        <Storyboard>
                            <DoubleAnimation From="0.3" To="1" Duration="0:0:0.15" BeginTime="0" Storyboard.TargetProperty="(RenderTransform).ScaleY"/>
                            <DoubleAnimation From="0.3" To="1" Duration="0:0:0.15" BeginTime="0" Storyboard.TargetProperty="(RenderTransform).ScaleX"/>
                            <DoubleAnimation From="0" To="30" Duration="0:0:1" BeginTime="0" SpeedRatio="0.1" Storyboard.TargetProperty="Opacity"/>
                            <DoubleAnimation From="30" To="100" Duration="0:0:0.2" BeginTime="0:0:1"  SpeedRatio="0.1" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="PlayAnimaiton"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding CalendarType, Mode=Default, UpdateSourceTrigger=PropertyChanged}" Value="2">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CalendarType, Mode=Default, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CalendarType, Mode=Default, UpdateSourceTrigger=PropertyChanged}" Value="1">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->
</ResourceDictionary>